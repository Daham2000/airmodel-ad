// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using airmodel_ad.Data;

#nullable disable

namespace airmodel_ad.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231205101654_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("airmodel_ad.Models.CartItemModel", b =>
                {
                    b.Property<Guid>("cartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("cartId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("productId")
                        .HasColumnType("char(36)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<Guid>("varientOptionId")
                        .HasColumnType("char(36)");

                    b.HasKey("cartItemId");

                    b.HasIndex("cartId");

                    b.HasIndex("productId");

                    b.HasIndex("varientOptionId");

                    b.ToTable("cartItems");
                });

            modelBuilder.Entity("airmodel_ad.Models.CartModel", b =>
                {
                    b.Property<Guid>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("cartId");

                    b.HasIndex("userId");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("airmodel_ad.Models.Category", b =>
                {
                    b.Property<Guid>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("categoryId");

                    b.ToTable("category");
                });

            modelBuilder.Entity("airmodel_ad.Models.OrderItem", b =>
                {
                    b.Property<Guid>("oItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("oId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("productId")
                        .HasColumnType("char(36)");

                    b.Property<int>("qty")
                        .HasColumnType("int");

                    b.Property<Guid>("varientOptionId")
                        .HasColumnType("char(36)");

                    b.HasKey("oItemId");

                    b.HasIndex("oId");

                    b.HasIndex("productId");

                    b.HasIndex("varientOptionId");

                    b.ToTable("orderItem");
                });

            modelBuilder.Entity("airmodel_ad.Models.OrderModel", b =>
                {
                    b.Property<Guid>("oId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("oId");

                    b.HasIndex("userId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("airmodel_ad.Models.ProductModel", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("categoryId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("hasVarients")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("productBasicPrice")
                        .HasColumnType("int");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("productQty")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.HasIndex("categoryId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("airmodel_ad.Models.User", b =>
                {
                    b.Property<Guid>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("userEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("userRole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("airmodel_ad.Models.VarientModel", b =>
                {
                    b.Property<Guid>("varientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("productId")
                        .HasColumnType("char(36)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("varientId");

                    b.HasIndex("productId");

                    b.ToTable("varient");
                });

            modelBuilder.Entity("airmodel_ad.Models.VarientOptionModel", b =>
                {
                    b.Property<Guid>("varientOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("varientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("varientImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("varientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("varientPrice")
                        .HasColumnType("int");

                    b.Property<int>("varientQty")
                        .HasColumnType("int");

                    b.HasKey("varientOptionId");

                    b.HasIndex("varientId");

                    b.ToTable("varientOption");
                });

            modelBuilder.Entity("airmodel_ad.Models.CartItemModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.CartModel", "cart")
                        .WithMany()
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("airmodel_ad.Models.ProductModel", "products")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("airmodel_ad.Models.VarientOptionModel", "varientOption")
                        .WithMany()
                        .HasForeignKey("varientOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("products");

                    b.Navigation("varientOption");
                });

            modelBuilder.Entity("airmodel_ad.Models.CartModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.User", "users")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("airmodel_ad.Models.OrderItem", b =>
                {
                    b.HasOne("airmodel_ad.Models.OrderModel", "orders")
                        .WithMany()
                        .HasForeignKey("oId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("airmodel_ad.Models.ProductModel", "products")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("airmodel_ad.Models.VarientOptionModel", "varientOption")
                        .WithMany()
                        .HasForeignKey("varientOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orders");

                    b.Navigation("products");

                    b.Navigation("varientOption");
                });

            modelBuilder.Entity("airmodel_ad.Models.OrderModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.User", "users")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("airmodel_ad.Models.ProductModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("airmodel_ad.Models.VarientModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.ProductModel", "products")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("airmodel_ad.Models.VarientOptionModel", b =>
                {
                    b.HasOne("airmodel_ad.Models.VarientModel", "varient")
                        .WithMany()
                        .HasForeignKey("varientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("varient");
                });
#pragma warning restore 612, 618
        }
    }
}
